{
  "openapi": "3.0.3",
  "info": {
    "title": "API Documentation",
    "version": "1.0.0",
    "description": "Documentaci칩n completa de la API"
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "CambiarRolRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UUID del usuario (opcional si se proporciona email)",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "description": "Email del usuario (opcional si se proporciona id)",
            "format": "email",
            "example": "usuario@ejemplo.com"
          },
          "rol_id": {
            "type": "number",
            "description": "ID del nuevo rol a asignar",
            "example": 2
          }
        },
        "required": [
          "rol_id"
        ]
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api/actividades": {
      "post": {
        "tags": [
          "Actividades"
        ],
        "summary": "Crear una nueva actividad",
        "description": "Crea una nueva actividad con todos sus detalles asociados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string"
                  },
                  "descripcion": {
                    "type": "string"
                  },
                  "es_privada": {
                    "type": "boolean"
                  },
                  "imagen": {
                    "type": "string",
                    "format": "url"
                  },
                  "estado": {
                    "type": "string"
                  },
                  "cronograma": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dia_completo": {
                          "type": "boolean"
                        },
                        "fecha_inicio": {
                          "type": "string",
                          "format": "date"
                        },
                        "dias": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 7
                          }
                        },
                        "hora_inicio": {
                          "type": "string",
                          "format": "HH:MM",
                          "example": "09:00"
                        },
                        "hora_fin": {
                          "type": "string",
                          "format": "HH:MM",
                          "example": "18:00"
                        },
                        "cupo": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "detalles": {
                    "type": "object",
                    "properties": {
                      "minimo_reserva": {
                        "type": "integer"
                      },
                      "limite_reserva_minutos": {
                        "type": "integer"
                      },
                      "umbral_limite_personas": {
                        "type": "integer"
                      },
                      "umbral_limite_minutos": {
                        "type": "integer"
                      },
                      "umbral_limite_tipo": {
                        "type": "string"
                      }
                    }
                  },
                  "tarifas": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "descripcion": {
                          "type": "string"
                        },
                        "precio": {
                          "type": "number"
                        },
                        "moneda": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "adicionales": {
                    "type": "array",
                    "description": "Array de IDs de adicionales existentes",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "transporte": {
                    "type": "array",
                    "description": "Array de IDs de transportes existentes",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "descuentos": {
                    "type": "array",
                    "description": "Array de IDs de descuentos existentes",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Actividad creada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Actividad creada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "titulo": {
                          "type": "string"
                        },
                        "estado": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorValidacion"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Actividades"
        ],
        "summary": "Eliminar una actividad (soft delete)",
        "description": "Realiza un soft delete de una actividad, marc치ndola como inactiva pero manteniendo el registro en la base de datos.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID de la actividad a eliminar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actividad eliminada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Actividad eliminada exitosamente"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID de actividad no proporcionado o inv치lido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Actividad no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Actividades"
        ],
        "summary": "Actualizar una actividad existente",
        "description": "Actualiza una actividad existente con todos sus detalles asociados",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID de la actividad a actualizar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string"
                  },
                  "titulo_en": {
                    "type": "string"
                  },
                  "descripcion": {
                    "type": "string"
                  },
                  "descripcion_en": {
                    "type": "string"
                  },
                  "es_privada": {
                    "type": "boolean"
                  },
                  "imagen": {
                    "type": "string"
                  },
                  "estado": {
                    "type": "string"
                  },
                  "iframe_code": {
                    "type": "string"
                  },
                  "ubicacion": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number"
                      },
                      "lng": {
                        "type": "number"
                      },
                      "direccion": {
                        "type": "string"
                      }
                    }
                  },
                  "detalles": {
                    "type": "object",
                    "properties": {
                      "minimo_reserva": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "M칤nimo de personas para la reserva"
                      },
                      "limite_reserva_minutos": {
                        "type": "integer"
                      },
                      "umbral_limite_personas": {
                        "type": "integer"
                      },
                      "umbral_limite_minutos": {
                        "type": "integer"
                      },
                      "umbral_limite_tipo": {
                        "type": "string"
                      }
                    }
                  },
                  "cronograma": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "fecha_inicio": {
                          "type": "string",
                          "format": "date"
                        },
                        "dias": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 7
                          }
                        },
                        "dia_completo": {
                          "type": "boolean"
                        },
                        "hora_inicio": {
                          "type": "string",
                          "format": "HH:MM",
                          "example": "09:00"
                        },
                        "hora_fin": {
                          "type": "string",
                          "format": "HH:MM",
                          "example": "18:00"
                        },
                        "cupo": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "tarifas": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "nombre": {
                          "type": "string"
                        },
                        "nombre_en": {
                          "type": "string"
                        },
                        "precio": {
                          "type": "number"
                        },
                        "moneda": {
                          "type": "string",
                          "default": "USD"
                        }
                      }
                    }
                  },
                  "adicionales": {
                    "type": "array",
                    "description": "Array de IDs de adicionales existentes",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "transportes": {
                    "type": "array",
                    "description": "Array de IDs de transportes existentes",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "descuentos": {
                    "type": "array",
                    "description": "Array de IDs de descuentos existentes",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Actividad actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Actividad actualizada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "titulo": {
                          "type": "string"
                        },
                        "estado": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos o ID no proporcionado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorValidacion"
                }
              }
            }
          },
          "404": {
            "description": "Actividad no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Actividades"
        ],
        "summary": "Obtener actividades",
        "description": "Obtiene una lista de actividades o una actividad espec칤fica por ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la actividad (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "agencia_id",
            "in": "query",
            "description": "ID de la agencia para filtrar actividades (opcional)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Actividades obtenidas exitosamente"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "titulo": {
                                "type": "string"
                              },
                              "imagen": {
                                "type": "string"
                              },
                              "iframe_code": {
                                "type": "string"
                              },
                              "estado": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 200
                        },
                        "message": {
                          "type": "string",
                          "example": "Actividad obtenida exitosamente"
                        },
                        "data": {
                          "type": "object"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Actividad no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/actividades/cambiar-estado": {
      "patch": {
        "tags": [
          "Actividades"
        ],
        "summary": "Cambiar el estado de una actividad",
        "description": "Cambia el estado de una actividad entre 'borrador' y 'publicado'",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la actividad a actualizar"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "estado"
                ],
                "properties": {
                  "estado": {
                    "type": "string",
                    "enum": [
                      "borrador",
                      "publicado"
                    ],
                    "description": "Nuevo estado de la actividad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estado de la actividad actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Estado de la actividad actualizado a 'publicado' exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "description": "Datos de la actividad actualizada"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Se requiere el campo 'estado' con valor 'borrador' o 'publicado'"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Actividad no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Actividad no encontrada"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error al cambiar el estado de la actividad"
                    },
                    "errors": {
                      "type": "string",
                      "example": "Mensaje de error detallado"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/actividades/imagenes": {
      "post": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Guardar imagen",
        "description": "Guarda una imagen en el bucket de actividades asociada a una agencia",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Archivo de imagen a subir"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Imagen guardada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Imagen guardada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "signed_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://example.com/signed-url"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de imagen inv치lidos"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Obtener URL de una imagen",
        "description": "Obtiene la URL firmada de una imagen asociada a una actividad",
        "parameters": [
          {
            "in": "query",
            "name": "actividadId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la actividad"
          }
        ],
        "responses": {
          "200": {
            "description": "URL obtenida exitosamente"
          },
          "404": {
            "description": "Imagen no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Actualizar una imagen",
        "description": "Actualiza una imagen asociada a una actividad",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "actividadId",
                  "image"
                ],
                "properties": {
                  "actividadId": {
                    "type": "integer",
                    "description": "ID de la actividad"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Archivo de imagen a subir"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imagen actualizada exitosamente"
          },
          "400": {
            "description": "Datos inv치lidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Eliminar una imagen",
        "description": "Elimina una imagen asociada a una actividad",
        "parameters": [
          {
            "in": "query",
            "name": "actividadId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la actividad"
          }
        ],
        "responses": {
          "200": {
            "description": "Imagen eliminada exitosamente"
          },
          "400": {
            "description": "Datos inv치lidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/adicionales/imagenes": {
      "post": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Guardar imagen",
        "description": "Guarda una imagen en el bucket de adicionales asociada a una agencia",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "image"
                ],
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Archivo de imagen a subir"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Imagen guardada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Imagen guardada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "signed_url": {
                          "type": "string",
                          "format": "uri",
                          "example": "https://example.com/signed-url"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de imagen inv치lidos"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Obtener URL de una imagen",
        "description": "Obtiene la URL firmada de una imagen asociada a un adicional",
        "parameters": [
          {
            "in": "query",
            "name": "adicionalId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del adicional"
          }
        ],
        "responses": {
          "200": {
            "description": "URL obtenida exitosamente"
          },
          "404": {
            "description": "Imagen no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Actualizar una imagen",
        "description": "Actualiza una imagen asociada a un adicional",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "adicionalId",
                  "image"
                ],
                "properties": {
                  "adicionalId": {
                    "type": "integer",
                    "description": "ID del adicional"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Archivo de imagen a subir"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Imagen actualizada exitosamente"
          },
          "400": {
            "description": "Datos inv치lidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Imagenes"
        ],
        "summary": "Eliminar una imagen",
        "description": "Elimina una imagen asociada a un adicional",
        "parameters": [
          {
            "in": "query",
            "name": "adicionalId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID del adicional"
          }
        ],
        "responses": {
          "200": {
            "description": "Imagen eliminada exitosamente"
          },
          "400": {
            "description": "Datos inv치lidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/adicionales": {
      "get": {
        "tags": [
          "Adicionales"
        ],
        "summary": "Obtener lista de adicionales",
        "description": "Obtiene una lista de adicionales, opcionalmente filtrados por actividad. Por defecto solo devuelve adicionales activos y no eliminados.",
        "parameters": [
          {
            "name": "actividad_id",
            "in": "query",
            "description": "ID de la actividad (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID del adicional (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "aplica_a_todas",
            "in": "query",
            "description": "Filtra por adicionales globales (opcional)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activo",
            "in": "query",
            "description": "Filtra por adicionales activos (opcional, por defecto true)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Adicionales obtenidos exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "titulo": {
                            "type": "string"
                          },
                          "titulo_en": {
                            "type": "string"
                          },
                          "descripcion": {
                            "type": "string"
                          },
                          "descripcion_en": {
                            "type": "string"
                          },
                          "precio": {
                            "type": "number"
                          },
                          "moneda": {
                            "type": "string"
                          },
                          "activo": {
                            "type": "boolean"
                          },
                          "aplica_a_todas": {
                            "type": "boolean"
                          },
                          "agencia_id": {
                            "type": "integer"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "actividad_ids": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud inv치lida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Adicionales"
        ],
        "summary": "Crear un nuevo adicional",
        "description": "Crea un nuevo adicional con los datos proporcionados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "T칤tulo del adicional"
                  },
                  "titulo_en": {
                    "type": "string",
                    "description": "T칤tulo del adicional en ingl칠s (opcional)"
                  },
                  "descripcion": {
                    "type": "string",
                    "description": "Descripci칩n del adicional"
                  },
                  "descripcion_en": {
                    "type": "string",
                    "description": "Descripci칩n del adicional en ingl칠s (opcional)"
                  },
                  "precio": {
                    "type": "number",
                    "description": "Precio del adicional"
                  },
                  "moneda": {
                    "type": "string",
                    "description": "Moneda del precio (default USD)"
                  },
                  "imagen": {
                    "type": "string",
                    "description": "Url de la imagen del adicional"
                  },
                  "actividad_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "IDs de actividades a las que aplica este adicional"
                  },
                  "aplica_a_todas": {
                    "type": "boolean",
                    "description": "Si es true, el adicional se aplicar치 a todas las actividades de la agencia"
                  },
                  "activo": {
                    "type": "boolean",
                    "description": "Indica si el adicional est치 activo (default true)"
                  }
                },
                "required": [
                  "titulo",
                  "descripcion",
                  "precio"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Adicional creado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inv치lidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Adicionales"
        ],
        "summary": "Modificar un adicional existente",
        "description": "Actualiza un adicional existente y sus relaciones con actividades. Gestiona autom치ticamente las relaciones en la tabla actividad_adicionales.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del adicional a modificar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "T칤tulo del adicional"
                  },
                  "titulo_en": {
                    "type": "string",
                    "description": "T칤tulo del adicional en ingl칠s (opcional)"
                  },
                  "descripcion": {
                    "type": "string",
                    "description": "Descripci칩n del adicional"
                  },
                  "descripcion_en": {
                    "type": "string",
                    "description": "Descripci칩n del adicional en ingl칠s (opcional)"
                  },
                  "precio": {
                    "type": "number",
                    "description": "Precio del adicional"
                  },
                  "moneda": {
                    "type": "string",
                    "description": "Moneda del precio"
                  },
                  "aplica_a_todas": {
                    "type": "boolean",
                    "description": "Si es true, el adicional se aplicar치 a todas las actividades de la agencia"
                  },
                  "actividad_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "IDs de actividades a las que aplica este adicional"
                  },
                  "activo": {
                    "type": "boolean",
                    "description": "Indica si el adicional est치 activo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adicional modificado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Adicional actualizado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "titulo": {
                          "type": "string"
                        },
                        "descripcion": {
                          "type": "string"
                        },
                        "precio": {
                          "type": "number"
                        },
                        "moneda": {
                          "type": "string"
                        },
                        "activo": {
                          "type": "boolean"
                        },
                        "aplica_a_todas": {
                          "type": "boolean"
                        },
                        "agencia_id": {
                          "type": "integer"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "actividad_ids": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Adicional no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Adicionales"
        ],
        "summary": "Eliminar un adicional (soft delete)",
        "description": "Implementa un soft delete para adicionales. Marca el adicional como inactivo (activo=false), establece un timestamp en deleted_at, y mantiene el registro en la base de datos pero lo excluye de consultas regulares.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del adicional a eliminar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adicional eliminado exitosamente (soft delete)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Adicional eliminado exitosamente"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID de adicional no proporcionado o inv치lido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Adicional no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/agencias/onboarding/invitar": {
      "post": {
        "tags": [
          "Agencias"
        ],
        "summary": "Invitar y crear una nueva agencia",
        "description": "Crea una nueva agencia con estado inactivo y env칤a invitaci칩n al email de contacto como administrador",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "agencia",
                  "condiciones_comerciales",
                  "usuario_administrador"
                ],
                "properties": {
                  "agencia": {
                    "type": "object",
                    "required": [
                      "nombre_sociedad",
                      "nombre_comercial",
                      "cedula_juridica",
                      "pais"
                    ],
                    "properties": {
                      "nombre_sociedad": {
                        "type": "string",
                        "description": "Nombre legal de la agencia",
                        "minLength": 1
                      },
                      "nombre_comercial": {
                        "type": "string",
                        "description": "Nombre comercial de la agencia",
                        "minLength": 1
                      },
                      "cedula_juridica": {
                        "type": "string",
                        "description": "N칰mero de identificaci칩n fiscal"
                      },
                      "pais": {
                        "type": "string",
                        "description": "Pa칤s donde opera la agencia",
                        "minLength": 2
                      },
                      "sitio_web": {
                        "type": "string",
                        "format": "uri",
                        "description": "Sitio web de la agencia (opcional)"
                      },
                      "direccion": {
                        "type": "string",
                        "description": "Direcci칩n f칤sica de la agencia"
                      }
                    }
                  },
                  "condiciones_comerciales": {
                    "type": "object",
                    "required": [
                      "comision",
                      "terminos_condiciones"
                    ],
                    "properties": {
                      "comision": {
                        "type": "number",
                        "description": "Porcentaje de comisi칩n (0-100)",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "terminos_condiciones": {
                        "type": "string",
                        "description": "T칠rminos y condiciones de la agencia",
                        "minLength": 1
                      }
                    }
                  },
                  "configuracion_fees": {
                    "type": "object",
                    "description": "Configuraci칩n de impuestos y fees (opcional)",
                    "properties": {
                      "tax": {
                        "type": "number",
                        "description": "Porcentaje de impuesto aplicable (0-100)",
                        "minimum": 0,
                        "maximum": 100
                      },
                      "convenience_fee_fijo": {
                        "type": "boolean",
                        "description": "Indica si el convenience fee es fijo"
                      },
                      "convenience_fee_fijo_valor": {
                        "type": "number",
                        "description": "Valor fijo del convenience fee",
                        "minimum": 0
                      },
                      "convenience_fee_variable": {
                        "type": "boolean",
                        "description": "Indica si el convenience fee es variable"
                      },
                      "convenience_fee_variable_valor": {
                        "type": "number",
                        "description": "Porcentaje variable del convenience fee",
                        "minimum": 0
                      }
                    }
                  },
                  "usuario_administrador": {
                    "type": "object",
                    "required": [
                      "nombre",
                      "mail",
                      "telefono"
                    ],
                    "properties": {
                      "nombre": {
                        "type": "string",
                        "description": "Nombre del administrador",
                        "minLength": 1
                      },
                      "mail": {
                        "type": "string",
                        "format": "email",
                        "description": "Email del administrador"
                      },
                      "telefono": {
                        "type": "string",
                        "description": "N칰mero de tel칠fono del administrador",
                        "minLength": 5
                      },
                      "direccion": {
                        "type": "string",
                        "description": "Direcci칩n del administrador"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agencia creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID de la agencia creada"
                    },
                    "nombre": {
                      "type": "string",
                      "description": "Nombre de la agencia"
                    },
                    "email_contacto": {
                      "type": "string",
                      "description": "Email del administrador"
                    },
                    "activa": {
                      "type": "boolean",
                      "description": "Estado de la agencia (inicialmente false)"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Fecha de creaci칩n"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/agencias": {
      "get": {
        "tags": [
          "Agencias"
        ],
        "summary": "Obtener lista de agencias",
        "description": "Obtiene una lista de agencias o una agencia espec칤fica por ID. Se pueden aplicar filtros por estado activo/inactivo.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la agencia (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "activa",
            "in": "query",
            "description": "Filtrar por agencias activas o inactivas (opcional)",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Agencias obtenidas exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "nombre": {
                            "type": "string"
                          },
                          "email_contacto": {
                            "type": "string"
                          },
                          "telefono": {
                            "type": "string"
                          },
                          "direccion": {
                            "type": "string"
                          },
                          "termino_cond": {
                            "type": "string"
                          },
                          "moneda": {
                            "type": "string"
                          },
                          "activa": {
                            "type": "boolean"
                          },
                          "cedula": {
                            "type": "integer"
                          },
                          "web": {
                            "type": "string"
                          },
                          "pais": {
                            "type": "string"
                          },
                          "nombre_comercial": {
                            "type": "string"
                          },
                          "fee": {
                            "type": "string"
                          },
                          "tax": {
                            "type": "integer"
                          },
                          "convenience_fee_fijo": {
                            "type": "boolean"
                          },
                          "convenience_fee_fijo_valor": {
                            "type": "integer"
                          },
                          "convenience_fee_variable": {
                            "type": "boolean"
                          },
                          "convenience_fee_variable_valor": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Par치metros de solicitud inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "ID de agencia inv치lido, debe ser un n칰mero entero"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error al obtener agencias"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Agencias"
        ],
        "summary": "Crear una nueva agencia",
        "description": "Crea una nueva agencia con los datos proporcionados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre de la agencia"
                  },
                  "email_contacto": {
                    "type": "string",
                    "description": "Email de contacto de la agencia"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Tel칠fono de la agencia"
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Direcci칩n de la agencia"
                  },
                  "termino_cond": {
                    "type": "string",
                    "description": "T칠rminos y condiciones de la agencia"
                  },
                  "moneda": {
                    "type": "string",
                    "description": "Moneda de la agencia"
                  },
                  "activa": {
                    "type": "boolean",
                    "description": "Si la agencia est치 activa o no"
                  },
                  "cedula": {
                    "type": "integer",
                    "description": "C칠dula de la agencia"
                  },
                  "web": {
                    "type": "string",
                    "description": "Sitio web de la agencia"
                  },
                  "pais": {
                    "type": "string",
                    "description": "Pa칤s de la agencia"
                  },
                  "nombre_comercial": {
                    "type": "string",
                    "description": "Nombre comercial de la agencia"
                  },
                  "fee": {
                    "type": "string",
                    "description": "Comisi칩n de la agencia"
                  },
                  "tax": {
                    "type": "integer",
                    "description": "Impuesto de la agencia"
                  },
                  "convenience_fee_fijo": {
                    "type": "boolean",
                    "description": "Si la agencia tiene comisi칩n fija"
                  },
                  "convenience_fee_fijo_valor": {
                    "type": "integer",
                    "description": "Valor de la comisi칩n fija"
                  },
                  "convenience_fee_variable": {
                    "type": "boolean",
                    "description": "Si la agencia tiene comisi칩n variable"
                  },
                  "convenience_fee_variable_valor": {
                    "type": "string",
                    "description": "Valor de la comisi칩n variable"
                  }
                },
                "required": [
                  "nombre",
                  "email_contacto"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agencia creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Agencia creada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "nombre": {
                          "type": "string"
                        },
                        "email_contacto": {
                          "type": "string"
                        },
                        "telefono": {
                          "type": "string"
                        },
                        "direccion": {
                          "type": "string"
                        },
                        "termino_cond": {
                          "type": "string"
                        },
                        "moneda": {
                          "type": "string"
                        },
                        "activa": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de agencia inv치lidos"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflicto - La agencia ya existe",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "Ya existe una agencia con esta informaci칩n"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error interno del servidor"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Agencias"
        ],
        "summary": "Actualizar una agencia",
        "description": "Actualiza una agencia existente con los datos proporcionados",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la agencia a actualizar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre de la agencia"
                  },
                  "email_contacto": {
                    "type": "string",
                    "description": "Email de contacto de la agencia"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Tel칠fono de la agencia"
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Direcci칩n de la agencia"
                  },
                  "termino_cond": {
                    "type": "string",
                    "description": "T칠rminos y condiciones de la agencia"
                  },
                  "moneda": {
                    "type": "string",
                    "description": "Moneda de la agencia"
                  },
                  "activa": {
                    "type": "boolean",
                    "description": "Si la agencia est치 activa o no"
                  },
                  "cedula": {
                    "type": "integer",
                    "description": "C칠dula de la agencia"
                  },
                  "web": {
                    "type": "string",
                    "description": "Sitio web de la agencia"
                  },
                  "pais": {
                    "type": "string",
                    "description": "Pa칤s de la agencia"
                  },
                  "nombre_comercial": {
                    "type": "string",
                    "description": "Nombre comercial de la agencia"
                  },
                  "fee": {
                    "type": "string",
                    "description": "Comisi칩n de la agencia"
                  },
                  "tax": {
                    "type": "integer",
                    "description": "Impuesto de la agencia"
                  },
                  "convenience_fee_fijo": {
                    "type": "boolean",
                    "description": "Si la agencia tiene comisi칩n fija"
                  },
                  "convenience_fee_fijo_valor": {
                    "type": "integer",
                    "description": "Valor de la comisi칩n fija"
                  },
                  "convenience_fee_variable": {
                    "type": "boolean",
                    "description": "Si la agencia tiene comisi칩n variable"
                  },
                  "convenience_fee_variable_valor": {
                    "type": "string",
                    "description": "Valor de la comisi칩n variable"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agencia actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Agencia actualizada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "nombre": {
                          "type": "string"
                        },
                        "email_contacto": {
                          "type": "string"
                        },
                        "telefono": {
                          "type": "string"
                        },
                        "direccion": {
                          "type": "string"
                        },
                        "termino_cond": {
                          "type": "string"
                        },
                        "moneda": {
                          "type": "string"
                        },
                        "activa": {
                          "type": "boolean"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos o par치metro ID no proporcionado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de agencia inv치lidos"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Agencia no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Agencia no encontrada"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflicto - Email ya en uso por otra agencia",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "El email ya est치 en uso por otra agencia"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error interno del servidor"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Agencias"
        ],
        "summary": "Desactivar una agencia",
        "description": "Desactiva una agencia existente (eliminaci칩n l칩gica/soft delete). Marca la agencia como inactiva (activa=false).",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la agencia a desactivar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Agencia desactivada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Agencia desactivada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "nombre": {
                          "type": "string"
                        },
                        "activa": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Par치metro ID no proporcionado o inv치lido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Se requiere el par치metro ID"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Agencia no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Agencia no encontrada"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error interno del servidor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Logs in a user",
        "description": "Authenticates a user with email and password. This endpoint is intended for testing purposes only and is only available when NODE_ENV is 'test'.",
        "tags": [
          "Auth"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address."
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful. Returns session tokens and user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "The access token for the session."
                    },
                    "refresh_token": {
                      "type": "string",
                      "description": "The refresh token for the session."
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "The duration in seconds until the access token expires."
                    },
                    "token_type": {
                      "type": "string",
                      "description": "The type of token (e.g., \"bearer\")."
                    },
                    "user": {
                      "type": "object",
                      "description": "Information about the authenticated user."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed. Invalid credentials or other error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Error message detailing the authentication failure."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found. This endpoint is not available in the current environment (e.g., production/development)."
          }
        }
      }
    },
    "/api/clientes": {
      "get": {
        "tags": [
          "Clientes"
        ],
        "summary": "Obtener lista de clientes",
        "description": "Obtiene un listado de clientes",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filtrar por ID del cliente",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filtrar por email del cliente (b칰squeda parcial)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "telefono",
            "in": "query",
            "description": "Filtrar por telefono del cliente",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activo",
            "in": "query",
            "description": "Filtrar por cliente activos/inactivos",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de cliente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente obtenidos exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Clientes"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clientes"
        ],
        "summary": "Crear un nuevo cliente",
        "description": "Registra un nuevo cliente en el sistema. Si se proporciona un ID de reserva, el cliente ser치 asociado con esa reserva. Si el cliente ya existe (mismo email), se devolver치 el cliente existente y se actualizar치 la reserva con el ID del cliente.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nombre",
                  "apellido",
                  "email"
                ],
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre del cliente"
                  },
                  "apellido": {
                    "type": "string",
                    "description": "Apellido del cliente"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email del cliente"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Tel칠fono del cliente (opcional)"
                  },
                  "activo": {
                    "type": "string",
                    "description": "Estado del cliente (opcional)"
                  },
                  "reserva_id": {
                    "type": "integer",
                    "description": "ID de la reserva a asociar con este cliente (opcional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente creado o encontrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente creado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "123e4567-e89b-12d3-a456-426614174000"
                        },
                        "nombre": {
                          "type": "string",
                          "example": "Juan"
                        },
                        "apellido": {
                          "type": "string",
                          "example": "P칠rez"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "juan.perez@example.com"
                        },
                        "telefono": {
                          "type": "string",
                          "example": 123456789
                        },
                        "activo": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "reservaActualizada": {
                      "type": "boolean",
                      "description": "Indica si se actualiz칩 una reserva con el ID del cliente",
                      "example": true
                    },
                    "isExisting": {
                      "type": "boolean",
                      "description": "Indica si el cliente ya exist칤a en el sistema",
                      "example": true
                    },
                    "warning": {
                      "type": "string",
                      "description": "Mensaje de advertencia opcional",
                      "example": "El cliente ya exist칤a en el sistema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de cliente inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de cliente inv치lidos"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Clientes"
        ],
        "summary": "Modificar un cliente existente",
        "description": "Actualiza un cliente existente",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del cliente a actualizar",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nombre",
                  "apellido",
                  "email",
                  "telefono"
                ],
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre del cliente"
                  },
                  "apellido": {
                    "type": "string",
                    "description": "Apellido del cliente"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email del cliente (debe ser 칰nico)"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Tel칠fono de contacto del cliente"
                  },
                  "activo": {
                    "type": "string",
                    "description": "Indica si el cliente est치 activo, por defecto \"pending\"",
                    "default": "pending"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cliente actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente modificado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Cliente"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos o email ya en uso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de cliente inv치lidos"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cliente no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Clientes"
        ],
        "summary": "Eliminar un cliente (soft delete)",
        "description": "Elimina un cliente (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del cliente a eliminar",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente marcado como eliminado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Cliente no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/correos": {
      "get": {
        "tags": [
          "Correos"
        ],
        "summary": "Obtener configuraci칩n de correos",
        "description": "Obtiene la configuraci칩n de correos con filtros opcionales",
        "parameters": [
          {
            "name": "agencia_id",
            "in": "query",
            "description": "ID de la agencia para filtrar (opcional)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Configuraci칩n de correos obtenida exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "agencia_id": {
                            "type": "integer"
                          },
                          "email_from": {
                            "type": "string"
                          },
                          "email_reply_to": {
                            "type": "string"
                          },
                          "logo_url": {
                            "type": "string"
                          },
                          "logo_filename": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Correos"
        ],
        "summary": "Crear configuraci칩n de correos",
        "description": "Crea una nueva configuraci칩n de correos para una agencia",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agencia_id": {
                    "type": "integer",
                    "description": "ID de la agencia"
                  },
                  "email_from": {
                    "type": "string",
                    "description": "Email de origen"
                  },
                  "email_reply_to": {
                    "type": "string",
                    "description": "Email de respuesta"
                  },
                  "logo_url": {
                    "type": "string",
                    "description": "URL del logo (opcional)"
                  },
                  "logo_filename": {
                    "type": "string",
                    "description": "Nombre del archivo del logo (opcional)"
                  }
                },
                "required": [
                  "agencia_id",
                  "email_from",
                  "email_reply_to"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Configuraci칩n creada exitosamente"
          },
          "400": {
            "description": "Datos de entrada inv치lidos"
          },
          "409": {
            "description": "Ya existe una configuraci칩n para esta agencia"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Correos"
        ],
        "summary": "Actualizar configuraci칩n de correos",
        "description": "Actualiza la configuraci칩n de correos de una agencia",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agencia_id": {
                    "type": "integer",
                    "description": "ID de la agencia"
                  },
                  "email_from": {
                    "type": "string",
                    "description": "Email de origen"
                  },
                  "email_reply_to": {
                    "type": "string",
                    "description": "Email de respuesta"
                  },
                  "logo_url": {
                    "type": "string",
                    "description": "URL del logo (opcional)"
                  },
                  "logo_filename": {
                    "type": "string",
                    "description": "Nombre del archivo del logo (opcional)"
                  }
                },
                "required": [
                  "agencia_id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configuraci칩n actualizada exitosamente"
          },
          "400": {
            "description": "Datos de entrada inv치lidos"
          },
          "404": {
            "description": "Configuraci칩n no encontrada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Correos"
        ],
        "summary": "Eliminar configuraci칩n de correos",
        "description": "Elimina la configuraci칩n de correos de una agencia",
        "parameters": [
          {
            "name": "agencia_id",
            "in": "query",
            "description": "ID de la agencia",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuraci칩n eliminada exitosamente"
          },
          "400": {
            "description": "ID de agencia requerido"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/descuentos": {
      "get": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Obtener lista de descuentos",
        "description": "Obtiene una lista de descuentos, opcionalmente filtrados por actividad o por ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del descuento (opcional). Si se especifica, retorna un descuento espec칤fico",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "actividad_id",
            "in": "query",
            "description": "ID de la actividad (opcional). Retorna descuentos asociados a la actividad",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Descuentos obtenidos exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "agencia_id": {
                            "type": "integer"
                          },
                          "titulo": {
                            "type": "string"
                          },
                          "tipo": {
                            "type": "string",
                            "enum": [
                              "monto",
                              "porcentaje"
                            ]
                          },
                          "valor": {
                            "type": "number"
                          },
                          "alcance": {
                            "type": "string",
                            "enum": [
                              "global",
                              "actividad"
                            ]
                          },
                          "valido_desde": {
                            "type": "string",
                            "format": "date"
                          },
                          "valido_hasta": {
                            "type": "string",
                            "format": "date"
                          },
                          "activo": {
                            "type": "boolean"
                          },
                          "uso_maximo": {
                            "type": "integer"
                          },
                          "usos_hechos": {
                            "type": "integer"
                          },
                          "moneda": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "deleted_at": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "actividad_ids": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Modificar un descuento existente",
        "description": "Actualiza un descuento existente y sus relaciones con actividades",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del descuento a modificar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string"
                  },
                  "tipo": {
                    "type": "string",
                    "enum": [
                      "monto",
                      "porcentaje"
                    ]
                  },
                  "valor": {
                    "type": "number"
                  },
                  "alcance": {
                    "type": "string",
                    "enum": [
                      "global",
                      "actividad"
                    ]
                  },
                  "valido_desde": {
                    "type": "string",
                    "format": "date"
                  },
                  "valido_hasta": {
                    "type": "string",
                    "format": "date"
                  },
                  "activo": {
                    "type": "boolean"
                  },
                  "uso_maximo": {
                    "type": "integer"
                  },
                  "actividad_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Descuento modificado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Descuento modificado exitosamente"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Descuento no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Eliminar un descuento (soft delete)",
        "description": "Marca un descuento como eliminado (soft delete) y elimina sus relaciones con actividades",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del descuento a eliminar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Descuento eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Descuento marcado como eliminado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "titulo": {
                          "type": "string"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Descuento no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Descuentos"
        ],
        "summary": "Crear un nuevo descuento",
        "description": "Crea un nuevo descuento con los datos proporcionados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "T칤tulo o nombre del descuento"
                  },
                  "tipo": {
                    "type": "string",
                    "enum": [
                      "monto",
                      "porcentaje"
                    ],
                    "description": "Tipo de descuento (monto fijo o porcentaje)"
                  },
                  "valor": {
                    "type": "number",
                    "description": "Valor del descuento (monto o porcentaje)"
                  },
                  "alcance": {
                    "type": "string",
                    "enum": [
                      "global",
                      "actividad"
                    ],
                    "description": "Si aplica a todas las actividades (global) o a actividades espec칤ficas"
                  },
                  "valido_desde": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha desde la que el descuento es v치lido"
                  },
                  "valido_hasta": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha hasta la que el descuento es v치lido"
                  },
                  "uso_maximo": {
                    "type": "integer",
                    "description": "N칰mero m치ximo de veces que se puede utilizar el descuento"
                  },
                  "actividad_ids": {
                    "type": "array",
                    "description": "IDs de actividades a las que aplicar el descuento (cuando alcance=actividad)",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "required": [
                  "titulo",
                  "tipo",
                  "valor",
                  "alcance"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Descuento creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Descuento creado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "descripcion": {
                          "type": "string"
                        },
                        "precio": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/horarios": {
      "get": {
        "tags": [
          "Horarios"
        ],
        "summary": "Obtener lista de horarios",
        "description": "Obtiene una lista de horarios, opcionalmente filtrados por actividad",
        "parameters": [
          {
            "name": "actividad_id",
            "in": "query",
            "description": "ID de la actividad (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID del horario (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "habilitada",
            "in": "query",
            "description": "Filtrar por horarios habilitados/deshabilitados (opcional)",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "fecha_desde",
            "in": "query",
            "description": "Fecha desde para filtrar horarios (formato YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fecha_hasta",
            "in": "query",
            "description": "Fecha hasta para filtrar horarios (formato YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Horarios obtenidos exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "actividad_id": {
                            "type": "integer"
                          },
                          "fecha_inicio": {
                            "type": "string",
                            "format": "date"
                          },
                          "dias": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 7
                            }
                          },
                          "dia_completo": {
                            "type": "boolean"
                          },
                          "hora_inicio": {
                            "type": "string",
                            "format": "time"
                          },
                          "hora_fin": {
                            "type": "string",
                            "format": "time"
                          },
                          "cupo": {
                            "type": "integer"
                          },
                          "habilitada": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Horarios"
        ],
        "summary": "Crear un nuevo horario",
        "description": "Crea un nuevo horario con los datos proporcionados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "actividad_id": {
                    "type": "integer"
                  },
                  "fecha_inicio": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de inicio en formato YYYY-MM-DD"
                  },
                  "fecha_fin": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de fin en formato YYYY-MM-DD"
                  },
                  "dias": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 7
                    },
                    "description": "Array de d칤as de la semana (1=lunes, 7=domingo)"
                  },
                  "dia_completo": {
                    "type": "boolean",
                    "default": false,
                    "description": "Indica si el horario cubre el d칤a completo"
                  },
                  "hora_inicio": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora de inicio en formato HH:MM (requerido si no es d칤a completo)"
                  },
                  "hora_fin": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora de fin en formato HH:MM (requerido si no es d칤a completo)"
                  },
                  "cupo": {
                    "type": "integer",
                    "default": 0,
                    "description": "Cupo m치ximo de personas"
                  },
                  "habilitada": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indica si el horario est치 habilitado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Horario creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Horario creado exitosamente"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Horarios"
        ],
        "summary": "Modificar un horario existente",
        "description": "Actualiza los datos de un horario existente",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del horario a modificar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "actividad_id": {
                    "type": "integer"
                  },
                  "fecha_inicio": {
                    "type": "string",
                    "format": "date"
                  },
                  "dias": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 7
                    },
                    "description": "Array de d칤as de la semana (1=lunes, 7=domingo)"
                  },
                  "dia_completo": {
                    "type": "boolean"
                  },
                  "hora_inicio": {
                    "type": "string",
                    "format": "time"
                  },
                  "hora_fin": {
                    "type": "string",
                    "format": "time"
                  },
                  "cupo": {
                    "type": "integer"
                  },
                  "habilitada": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Horario modificado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Horario modificado exitosamente"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Horario no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Horarios"
        ],
        "summary": "Eliminar un horario (soft delete)",
        "description": "Marca un horario como eliminado (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del horario a eliminar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Horario eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Horario marcado como eliminado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Horario no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/logs": {
      "get": {
        "tags": [
          "Sistema"
        ],
        "summary": "Obtener logs del sistema",
        "description": "Retorna los 칰ltimos logs de error o informaci칩n",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Tipo de logs a obtener (error o info)",
            "schema": {
              "type": "string",
              "enum": [
                "error",
                "info"
              ],
              "default": "error"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "N칰mero de logs a retornar",
            "schema": {
              "type": "integer",
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "type": {
                      "type": "string",
                      "example": "error"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pagos/{pagoId}/client-secret": {
      "get": {
        "summary": "Recupera el client_secret de Stripe para un pago",
        "description": "Permite al frontend recuperar un nuevo client_secret desde Stripe cuando lo ha perdido, sin exponer la clave secreta de API",
        "parameters": [
          {
            "in": "path",
            "name": "pagoId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "client_secret devuelto correctamente"
          },
          "400": {
            "description": "Pago cerrado o en estado no v치lido"
          },
          "404": {
            "description": "Pago no encontrado"
          },
          "500": {
            "description": "Error interno"
          }
        }
      }
    },
    "/api/reservas": {
      "get": {
        "summary": "Obtiene reservas con filtros obligatorios",
        "description": "Recupera las reservas seg칰n los criterios de filtrado especificados. Requiere al menos un par치metro de filtrado.",
        "tags": [
          "Reservas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la reserva espec칤fica",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "turno_id",
            "in": "query",
            "description": "ID del turno asociado",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "actividad_id",
            "in": "query",
            "description": "ID de la actividad asociada",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "agencia_id",
            "in": "query",
            "description": "ID de la agencia asociada",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de reservas que coinciden con los criterios",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reservas recuperadas exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "turno_id": {
                            "type": "integer",
                            "example": 5
                          },
                          "actividad_id": {
                            "type": "integer",
                            "example": 2
                          },
                          "agencia_id": {
                            "type": "integer",
                            "example": 1
                          },
                          "cliente_id": {
                            "type": "integer",
                            "example": 8
                          },
                          "estado": {
                            "type": "string",
                            "example": "hold"
                          },
                          "monto_total": {
                            "type": "number",
                            "example": 125.5
                          },
                          "payment_intent_id": {
                            "type": "string",
                            "example": "pi_3NKMbH2eZvKYlo2C1gUc32tj"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-04-23T22:30:00Z"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-04-23T22:35:00Z"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-04-23T23:00:00Z"
                          },
                          "reserva_items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "example": 7
                                },
                                "item_type": {
                                  "type": "string",
                                  "enum": [
                                    "tarifa",
                                    "adicional",
                                    "transporte"
                                  ],
                                  "example": "tarifa"
                                },
                                "item_id": {
                                  "type": "integer",
                                  "example": 3
                                },
                                "descripcion": {
                                  "type": "string",
                                  "example": "Entrada Adulto"
                                },
                                "cantidad": {
                                  "type": "integer",
                                  "example": 2
                                },
                                "precio_unitario": {
                                  "type": "number",
                                  "example": 42.5
                                },
                                "total": {
                                  "type": "number",
                                  "example": 85
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error en la solicitud - No se proporcion칩 ning칰n par치metro de filtrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Debe enviar id, actividad_id o turno_id"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error interno del servidor"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Crea un hold de reserva",
        "description": "Crea un hold temporal para una reserva, bloqueando el cupo y generando un client secret para pago",
        "tags": [
          "Reservas"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "turno_id",
                  "items"
                ],
                "properties": {
                  "turno_id": {
                    "type": "integer",
                    "description": "ID del turno para el cual se realiza la reserva",
                    "example": 5
                  },
                  "items": {
                    "type": "array",
                    "description": "Lista de 칤tems incluidos en la reserva (tarifas, adicionales, transportes)",
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "required": [
                        "item_type",
                        "item_id",
                        "cantidad"
                      ],
                      "properties": {
                        "item_type": {
                          "type": "string",
                          "enum": [
                            "tarifa",
                            "adicional",
                            "transporte"
                          ],
                          "description": "Tipo de 칤tem reservado",
                          "example": "tarifa"
                        },
                        "item_id": {
                          "type": "integer",
                          "description": "ID del 칤tem seg칰n su tipo",
                          "example": 3
                        },
                        "cantidad": {
                          "type": "integer",
                          "description": "N칰mero de unidades reservadas",
                          "minimum": 1,
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Hold de reserva creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Hold de reserva creado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "reservaId": {
                          "type": "integer",
                          "example": 123
                        },
                        "clientSecret": {
                          "type": "string",
                          "example": "cs_test_a1b2c3d4e5f6g7h8i9j0"
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-04-23T22:45:00Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos o error de validaci칩n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos inv치lidos"
                    },
                    "errors": {
                      "type": "object",
                      "example": {
                        "turno_id": [
                          "El turno no existe"
                        ],
                        "items[0].cantidad": [
                          "Debe ser un n칰mero positivo"
                        ]
                      }
                    },
                    "isValidationError": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recurso no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "El turno especificado no existe"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflicto (por ejemplo, cupo insuficiente)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "No hay cupo disponible para este turno"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error interno"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Obtener lista de roles",
        "description": "Obtiene una lista de roles o un rol espec칤fico por ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del rol (opcional)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Roles obtenidos exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "nombre": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Rol no encontrado"
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Crear un nuevo rol",
        "description": "Crea un nuevo rol con los datos proporcionados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre del rol"
                  }
                },
                "required": [
                  "nombre"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rol creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Rol creado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "nombre": {
                          "type": "string"
                        },
                        "descripcion": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Actualizar un rol existente",
        "description": "Actualiza los datos de un rol existente",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del rol a actualizar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre del rol"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Rol actualizado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inv치lidos"
          },
          "404": {
            "description": "Rol no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Eliminar un rol",
        "description": "Elimina permanentemente un rol",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del rol a eliminar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rol eliminado exitosamente"
          },
          "404": {
            "description": "Rol no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/tarifas": {
      "get": {
        "tags": [
          "Tarifas"
        ],
        "summary": "Obtener lista de tarifas",
        "description": "Obtiene un listado de tarifas",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Filtrar por ID de la tarifa",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "actividad_id",
            "in": "query",
            "description": "Filtrar por ID de la actividad asociada",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "es_principal",
            "in": "query",
            "description": "Filtrar por tarifas principales",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activa",
            "in": "query",
            "description": "Filtrar por tarifas activas/inactivas",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de tarifas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Tarifas obtenidas exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Tarifa"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tarifas"
        ],
        "summary": "Crear una nueva tarifa",
        "description": "Crea una nueva tarifa",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actividad_id",
                  "nombre",
                  "precio"
                ],
                "properties": {
                  "actividad_id": {
                    "type": "integer",
                    "description": "ID de la actividad asociada"
                  },
                  "nombre": {
                    "type": "string",
                    "description": "Nombre de la tarifa"
                  },
                  "nombre_en": {
                    "type": "string",
                    "description": "Nombre de la tarifa en ingl칠s"
                  },
                  "precio": {
                    "type": "number",
                    "format": "float",
                    "description": "Precio de la tarifa"
                  },
                  "es_principal": {
                    "type": "boolean",
                    "description": "Indica si es la tarifa principal",
                    "default": false
                  },
                  "activa": {
                    "type": "boolean",
                    "description": "Indica si la tarifa est치 activa",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tarifa creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Tarifa creada exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Tarifa"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de tarifa inv치lidos"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Tarifas"
        ],
        "summary": "Modificar una tarifa existente",
        "description": "Actualiza una tarifa existente",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la tarifa a actualizar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "actividad_id",
                  "nombre",
                  "precio"
                ],
                "properties": {
                  "actividad_id": {
                    "type": "integer",
                    "description": "ID de la actividad asociada"
                  },
                  "nombre": {
                    "type": "string",
                    "description": "Nombre de la tarifa"
                  },
                  "nombre_en": {
                    "type": "string",
                    "description": "Nombre de la tarifa en ingl칠s"
                  },
                  "precio": {
                    "type": "number",
                    "format": "float",
                    "description": "Precio de la tarifa"
                  },
                  "es_principal": {
                    "type": "boolean",
                    "description": "Indica si es la tarifa principal"
                  },
                  "activa": {
                    "type": "boolean",
                    "description": "Indica si la tarifa est치 activa"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tarifa actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Tarifa modificada exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Tarifa"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Datos de tarifa inv치lidos"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tarifa no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Tarifa no encontrada"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Tarifas"
        ],
        "summary": "Eliminar una tarifa (soft delete)",
        "description": "Elimina una tarifa (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la tarifa a eliminar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tarifa eliminada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Tarifa marcada como eliminada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tarifa no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Tarifa no encontrada"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/transportes": {
      "get": {
        "tags": [
          "Transportes"
        ],
        "summary": "Obtener lista de transportes",
        "description": "Obtiene una lista de transportes, opcionalmente filtrados por actividad",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del transporte (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "actividad_id",
            "in": "query",
            "description": "ID de la actividad (opcional)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Transportes obtenidos exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "titulo": {
                            "type": "string",
                            "description": "T칤tulo del transporte"
                          },
                          "direccion": {
                            "type": "string",
                            "description": "Direcci칩n o punto de partida del transporte"
                          },
                          "precio": {
                            "type": "number",
                            "description": "Precio del transporte"
                          },
                          "cupo_maximo": {
                            "type": "integer",
                            "description": "Capacidad m치xima del transporte"
                          },
                          "limite_horario": {
                            "type": "boolean",
                            "description": "Indica si el transporte tiene l칤mite de horario"
                          },
                          "limite_horas": {
                            "type": "number",
                            "description": "Horas l칤mite del transporte si aplica"
                          },
                          "mensaje": {
                            "type": "string",
                            "description": "Mensaje o informaci칩n adicional del transporte"
                          },
                          "actividad_ids": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transportes"
        ],
        "summary": "Crear un nuevo transporte",
        "description": "Crea un nuevo transporte con los datos proporcionados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "T칤tulo o nombre del transporte"
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Direcci칩n o punto de partida del transporte"
                  },
                  "precio": {
                    "type": "number",
                    "description": "Precio del transporte"
                  },
                  "cupo_maximo": {
                    "type": "integer",
                    "description": "Capacidad m치xima del transporte"
                  },
                  "limite_horario": {
                    "type": "boolean",
                    "description": "Indica si el transporte tiene l칤mite de horario"
                  },
                  "limite_horas": {
                    "type": "number",
                    "description": "Horas l칤mite del transporte si aplica"
                  },
                  "mensaje": {
                    "type": "string",
                    "description": "Mensaje o informaci칩n adicional del transporte"
                  },
                  "actividad_ids": {
                    "type": "array",
                    "description": "IDs de las actividades asociadas al transporte",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "horarios": {
                    "type": "array",
                    "description": "Horarios disponibles para el transporte",
                    "items": {
                      "type": "object",
                      "properties": {
                        "hora_salida": {
                          "type": "string",
                          "description": "Hora de salida en formato HH:MM"
                        },
                        "hora_llegada": {
                          "type": "string",
                          "description": "Hora de llegada en formato HH:MM (opcional)"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "titulo",
                  "precio",
                  "cupo_maximo",
                  "actividad_ids"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Transporte creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Transporte creado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "titulo": {
                          "type": "string"
                        },
                        "direccion": {
                          "type": "string"
                        },
                        "precio": {
                          "type": "number"
                        },
                        "cupo_maximo": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Transportes"
        ],
        "summary": "Modificar un transporte existente",
        "description": "Actualiza los datos de un transporte y sus relaciones con actividades",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del transporte a modificar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "titulo": {
                    "type": "string",
                    "description": "T칤tulo o nombre del transporte"
                  },
                  "direccion": {
                    "type": "string",
                    "description": "Direcci칩n o punto de partida del transporte"
                  },
                  "precio": {
                    "type": "number",
                    "description": "Precio del transporte"
                  },
                  "cupo_maximo": {
                    "type": "integer",
                    "description": "Capacidad m치xima del transporte"
                  },
                  "limite_horario": {
                    "type": "boolean",
                    "description": "Indica si el transporte tiene l칤mite de horario"
                  },
                  "limite_horas": {
                    "type": "number",
                    "description": "Horas l칤mite del transporte si aplica"
                  },
                  "mensaje": {
                    "type": "string",
                    "description": "Mensaje o informaci칩n adicional del transporte"
                  },
                  "activo": {
                    "type": "boolean",
                    "description": "Estado activo del transporte"
                  },
                  "actividad_ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "horarios": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID del horario (solo para actualizar horarios existentes)"
                        },
                        "hora_salida": {
                          "type": "string",
                          "description": "Hora de salida (formato HH:MM)"
                        },
                        "hora_llegada": {
                          "type": "string",
                          "description": "Hora de llegada (formato HH:MM)"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transporte modificado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Transporte modificado exitosamente"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Transporte no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Transportes"
        ],
        "summary": "Eliminar un transporte (soft delete)",
        "description": "Marca un transporte como eliminado (soft delete) y elimina sus relaciones con actividades",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID del transporte a eliminar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transporte eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Transporte marcado como eliminado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "titulo": {
                          "type": "string"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transporte no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/turnos/generar": {
      "post": {
        "summary": "Regenerar turnos para una actividad o un horario espec칤fico",
        "tags": [
          "Turnos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "actividad_id": {
                    "type": "integer",
                    "description": "ID de la actividad para regenerar todos sus turnos"
                  },
                  "horario_id": {
                    "type": "integer",
                    "description": "ID del horario espec칤fico para regenerar sus turnos"
                  },
                  "fecha_desde": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha desde la cual se regenerar치n los turnos"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Turnos regenerados exitosamente"
          },
          "400": {
            "description": "Error de validaci칩n"
          },
          "404": {
            "description": "Actividad o horario no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/turnos/modificacionesTemporarias": {
      "get": {
        "tags": [
          "Modificaciones Temporarias"
        ],
        "summary": "Obtener lista de modificaciones temporarias",
        "description": "Obtiene un listado de modificaciones temporarias con filtros opcionales",
        "parameters": [
          {
            "name": "agencia_id",
            "in": "query",
            "description": "Filtrar por ID de la agencia",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tipo",
            "in": "query",
            "description": "Filtrar por tipo de modificaci칩n",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CAMBIAR_HORA_INICIO",
                "CAMBIAR_CUPOS",
                "BLOQUEAR_HORARIO",
                "BLOQUEAR_ACTIVIDAD",
                "BLOQUEAR_TODAS"
              ]
            }
          },
          {
            "name": "actividad_id",
            "in": "query",
            "description": "Filtrar por ID de la actividad",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fecha_desde",
            "in": "query",
            "description": "Filtrar por fecha de inicio",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "fecha_hasta",
            "in": "query",
            "description": "Filtrar por fecha de fin",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de modificaciones temporarias obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Modificaciones temporarias obtenidas exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ModificacionTemporaria"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Modificaciones Temporarias"
        ],
        "summary": "Crear una nueva modificaci칩n temporaria",
        "description": "Registra una nueva modificaci칩n temporaria en el sistema",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tipo_modificacion",
                  "fecha_desde",
                  "fecha_hasta"
                ],
                "properties": {
                  "actividad_id": {
                    "type": "integer",
                    "description": "ID de la actividad asociada"
                  },
                  "agencia_id": {
                    "type": "integer",
                    "description": "ID de la agencia asociada (opcional)"
                  },
                  "turno_id": {
                    "type": "integer",
                    "description": "ID del turno asociado (opcional)"
                  },
                  "fecha_desde": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de inicio de la modificaci칩n"
                  },
                  "fecha_hasta": {
                    "type": "string",
                    "format": "date",
                    "description": "Fecha de fin de la modificaci칩n"
                  },
                  "tipo_modificacion": {
                    "type": "string",
                    "enum": [
                      "CAMBIAR_HORA_INICIO",
                      "CAMBIAR_CUPOS",
                      "BLOQUEAR_HORARIO",
                      "BLOQUEAR_ACTIVIDAD",
                      "BLOQUEAR_TODAS"
                    ],
                    "description": "Tipo de modificaci칩n a realizar"
                  },
                  "hora_inicio_actual": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora de inicio original (opcional)"
                  },
                  "hora_inicio_nueva": {
                    "type": "string",
                    "format": "time",
                    "description": "Nueva hora de inicio (opcional)"
                  },
                  "horario_bloquear": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora a bloquear (opcional)"
                  },
                  "cupo_actual": {
                    "type": "integer",
                    "description": "Cantidad de cupos original (opcional)"
                  },
                  "nuevos_cupos_totales": {
                    "type": "integer",
                    "description": "Cantidad de cupos modificada (opcional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Modificaci칩n temporaria creada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Modificaci칩n temporaria creada exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ModificacionTemporaria"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta (ej. tipo de modificaci칩n no reconocido)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto (ej. reservas existentes en el per칤odo)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Datos inv치lidos (validaci칩n fallida)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Modificaciones Temporarias"
        ],
        "summary": "Modificar una modificaci칩n temporaria existente",
        "description": "Actualiza una modificaci칩n temporaria existente",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la modificaci칩n temporaria a actualizar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModificacionTemporaria"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Modificaci칩n temporaria actualizada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Modificaci칩n temporaria actualizada exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ModificacionTemporaria"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Solicitud incorrecta (ej. tipo de modificaci칩n no reconocido)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Modificaci칩n temporaria no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Conflicto (ej. reservas existentes en el per칤odo)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Datos inv치lidos (validaci칩n fallida)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Modificaciones Temporarias"
        ],
        "summary": "Eliminar una modificaci칩n temporaria (soft delete)",
        "description": "Elimina una modificaci칩n temporaria (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la modificaci칩n temporaria a eliminar",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Modificaci칩n temporaria eliminada exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Modificaci칩n temporaria eliminada exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Modificaci칩n temporaria no encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/turnos": {
      "get": {
        "tags": [
          "Turnos"
        ],
        "summary": "Obtener lista de turnos",
        "description": "Obtiene una lista de turnos, opcionalmente filtrados por actividad, horario, agencia o fecha",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID del turno (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "actividad_id",
            "in": "query",
            "description": "ID de la actividad (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "horario_id",
            "in": "query",
            "description": "ID del horario (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "agencia_id",
            "in": "query",
            "description": "ID de la agencia (opcional)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "fecha_desde",
            "in": "query",
            "description": "Fecha desde para filtrar turnos (formato YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fecha_hasta",
            "in": "query",
            "description": "Fecha hasta para filtrar turnos (formato YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "solo_disponibles",
            "in": "query",
            "description": "Si es true, muestra solo turnos con cupo disponible y no bloqueados",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "incluir_borrados",
            "in": "query",
            "description": "Si es true, incluye turnos marcados como eliminados",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operaci칩n exitosa",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Turnos obtenidos exitosamente"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Turno"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errorId": {
                          "type": "string",
                          "description": "Identificador 칰nico del error para facilitar su seguimiento",
                          "example": "ldcbn4kz89a3"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Turnos"
        ],
        "summary": "Crear un nuevo turno",
        "description": "Crea un nuevo turno con los datos proporcionados",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "horario_id": {
                    "type": "integer",
                    "description": "ID del horario asociado"
                  },
                  "actividad_id": {
                    "type": "integer",
                    "description": "ID de la actividad asociada"
                  },
                  "agencia_id": {
                    "type": "integer",
                    "description": "ID de la agencia asociada"
                  },
                  "cupo_disponible": {
                    "type": "integer",
                    "description": "Cantidad de cupos disponibles"
                  },
                  "fecha": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Fecha del turno"
                  },
                  "hora_inicio": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora de inicio del turno"
                  },
                  "hora_fin": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora de fin del turno"
                  },
                  "bloquear": {
                    "type": "boolean",
                    "description": "Indica si el turno est치 bloqueado"
                  },
                  "cupo_total": {
                    "type": "integer",
                    "description": "Capacidad total del turno"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Turno creado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Turno creado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Turno"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos o par치metros faltantes",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorValidacion"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "Referencia inv치lida: El horario especificado no existe"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "foreign_key_violation"
                              },
                              "field": {
                                "type": "string",
                                "example": "horario_id"
                              },
                              "message": {
                                "type": "string",
                                "example": "El ID proporcionado no existe en la tabla de horarios"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errorId": {
                          "type": "string",
                          "description": "Identificador 칰nico del error para facilitar su seguimiento",
                          "example": "ldcbn4kz89a3"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Turnos"
        ],
        "summary": "Actualizar un turno existente",
        "description": "Actualiza un turno existente identificado por su ID",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "example": 1,
            "description": "ID del turno a actualizar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "horario_id": {
                    "type": "integer",
                    "description": "ID del horario asociado"
                  },
                  "actividad_id": {
                    "type": "integer",
                    "description": "ID de la actividad asociada"
                  },
                  "agencia_id": {
                    "type": "integer",
                    "description": "ID de la agencia asociada"
                  },
                  "cupo_disponible": {
                    "type": "integer",
                    "description": "Cantidad de cupos disponibles"
                  },
                  "fecha": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Fecha del turno"
                  },
                  "hora_inicio": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora de inicio del turno"
                  },
                  "hora_fin": {
                    "type": "string",
                    "format": "time",
                    "description": "Hora de fin del turno"
                  },
                  "bloquear": {
                    "type": "boolean",
                    "description": "Indica si el turno est치 bloqueado"
                  },
                  "cupo_total": {
                    "type": "integer",
                    "description": "Capacidad total del turno"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Turno actualizado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Turno modificado exitosamente"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Turno"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos inv치lidos o par치metros faltantes",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ErrorValidacion"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "example": 400
                        },
                        "message": {
                          "type": "string",
                          "example": "Referencia inv치lida: El horario especificado no existe"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "foreign_key_violation"
                              },
                              "field": {
                                "type": "string",
                                "example": "horario_id"
                              },
                              "message": {
                                "type": "string",
                                "example": "El ID proporcionado no existe en la tabla de horarios"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Turno no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Turno no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errorId": {
                          "type": "string",
                          "description": "Identificador 칰nico del error para facilitar su seguimiento",
                          "example": "ldcbn4kz89a3"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Turnos"
        ],
        "summary": "Eliminar un turno",
        "description": "Marca un turno como eliminado (soft delete)",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "example": 1,
            "description": "ID del turno a eliminar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turno eliminado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Turno marcado como eliminado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "deleted_at": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Turno no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Turno no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Error"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errorId": {
                          "type": "string",
                          "description": "Identificador 칰nico del error para facilitar su seguimiento",
                          "example": "ldcbn4kz89a3"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/usuarios/{id}": {
      "delete": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Eliminar un usuario",
        "description": "Permite eliminar un usuario espec칤fico de una agencia",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID del usuario a eliminar"
          },
          {
            "in": "header",
            "name": "x-agencia-id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la agencia"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuario eliminado exitosamente"
          },
          "400": {
            "description": "Datos de entrada inv치lidos"
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "Usuario no encontrado"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/usuarios/agencyadmin": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Invitar administrador de agencia",
        "description": "Permite invitar a un usuario como administrador para una agencia existente",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nombre",
                  "email",
                  "agencia_id"
                ],
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre completo del usuario"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email del usuario"
                  },
                  "telefono": {
                    "type": "string",
                    "description": "Tel칠fono del usuario (opcional)"
                  },
                  "agencia_id": {
                    "type": "integer",
                    "description": "ID de la agencia a la que pertenecer치 el administrador"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario invitado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos o error en la invitaci칩n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "403": {
            "description": "Permisos insuficientes"
          }
        }
      },
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Obtener usuarios de agencia",
        "description": "Permite obtener la lista de usuarios regulares de una agencia",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-agencia-id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la agencia para filtrar usuarios"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios de agencia obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "resultado": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "nombre": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "agencia_id": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "403": {
            "description": "Permisos insuficientes"
          },
          "404": {
            "description": "No se encontraron usuarios para la agencia especificada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/usuarios/agencyuser": {
      "post": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Invitar usuario regular de agencia",
        "description": "Permite invitar a un usuario regular (no administrador) para una agencia existente",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nombre",
                  "email",
                  "agencia_id",
                  "rol_id"
                ],
                "properties": {
                  "nombre": {
                    "type": "string",
                    "description": "Nombre completo del usuario"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email del usuario"
                  },
                  "agencia_id": {
                    "type": "integer",
                    "description": "ID de la agencia a la que pertenecer치 el usuario"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario invitado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de entrada inv치lidos o error en la invitaci칩n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "403": {
            "description": "Permisos insuficientes"
          }
        }
      }
    },
    "/api/usuarios/cambiar-rol": {
      "put": {
        "summary": "Cambia el rol de un usuario",
        "description": "Actualiza el rol de un usuario existente identificado por ID o email",
        "tags": [
          "Usuarios"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "ID del usuario (opcional si se proporciona email)",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "description": "Email del usuario (opcional si se proporciona ID)",
            "schema": {
              "type": "string",
              "format": "email"
            }
          },
          {
            "name": "rol_id",
            "in": "query",
            "required": true,
            "description": "ID del nuevo rol a asignar",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rol actualizado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Rol actualizado correctamente para usuario@ejemplo.com"
                    },
                    "usuario": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Datos de solicitud inv치lidos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Debe proporcionar el ID o el email del usuario"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuario no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Usuario no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Error inesperado al cambiar el rol"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/usuarios": {
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Obtener todos los usuarios de una agencia",
        "description": "Permite obtener la lista completa de usuarios (tanto admins como usuarios regulares) de una agencia",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "x-agencia-id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID de la agencia para filtrar usuarios"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "resultado": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "nombre": {
                            "type": "string"
                          },
                          "apellido": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "rol_id": {
                            "type": "integer"
                          },
                          "agencia_id": {
                            "type": "integer"
                          },
                          "activo": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "404": {
            "description": "No se encontraron usuarios para la agencia especificada"
          },
          "500": {
            "description": "Error interno del servidor"
          }
        }
      }
    },
    "/api/usuarios/superadmin": {
      "post": {
        "summary": "Invites a new Super Admin user.",
        "description": "Sends an invitation email to the specified email address to create a new Super Admin user.\nThe invited user will be assigned the 'SUPER_ADMIN' role.\nThis endpoint requires the calling user to have the 'ADMIN' role.\n",
        "tags": [
          "Usuarios"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the user to invite as Super Admin.",
                    "example": "superadmin@example.com"
                  },
                  "nombre": {
                    "type": "string",
                    "description": "The first name of the user to invite as Super Admin.",
                    "example": "John"
                  },
                  "apellido": {
                    "type": "string",
                    "description": "The last name of the user to invite as Super Admin.",
                    "example": "Doe"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invitation sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Invitation sent"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input (e.g., malformed email).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - User not authenticated or does not have the required 'ADMIN' role.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - User already exists or has a pending invitation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Failed to send invitation or save user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [],
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Usuarios"
        ],
        "summary": "Obtener usuarios de agencia",
        "description": "Permite obtener la lista de usuarios regulares de una agencia",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuarios de agencia obtenida exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "resultado": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "nombre": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "agencia_id": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No autorizado"
          },
          "403": {
            "description": "Permisos insuficientes"
          },
          "404": {
            "description": "No se encontraron usuarios para la agencia especificada"
          },
          "500": {
            "description": "Error al obtener transportes"
          }
        }
      }
    },
    "/api/usuarios/superadmin/spy_mode": {
      "put": {
        "tags": [
          "Usuarios SuperAdmin Spy Mode"
        ],
        "summary": "Asigna un ID de agencia al superadmin (Spy Mode)",
        "description": "Permite al superadmin acceder temporalmente como un usuario de agencia (agencyuser/agencyadmin) asign치ndole un ID de agencia.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "agencia_id",
            "required": false,
            "schema": {
              "type": "integer",
              "nullable": true
            },
            "description": "ID de la agencia a asignar al superadmin. Si es null, se elimina la asignaci칩n."
          }
        ],
        "responses": {
          "200": {
            "description": "ID de agencia asignado correctamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Cliente modificado exitosamente"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "uuid-usuario"
                        },
                        "agencia_id": {
                          "type": "integer",
                          "nullable": true,
                          "example": 123
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "ID de agencia no v치lido",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "ID de agencia no v치lido"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ID de agencia no encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "ID de agencia no encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error interno del servidor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Error interno del servidor"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/webhooks/stripe": {
      "post": {
        "summary": "Webhook para recibir eventos de Stripe",
        "description": "Endpoint para recibir y procesar eventos de Stripe como pagos, payouts, etc.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Evento recibido y procesado correctamente"
          },
          "400": {
            "description": "Error en la verificaci칩n del webhook"
          }
        }
      }
    }
  },
  "tags": []
}